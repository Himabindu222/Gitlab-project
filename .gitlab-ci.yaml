stages:
  - install_tools
  - test
  - file_system_scanning
  - sonarqube_analysis
  - docker_build
  - docker_push
  - image_scan
  - deploy

install_mvn_trivy_docker_kubectl:
  stage: install_tools
  script:
    - sudo apt install -y openjdk-17-jre-headless
    - sudo apt install maven -y
    - wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
    - echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list

    - sudo apt-get update && sudo apt-get install -y trivy
    - sudo apt install -y docker.io && sudo chmod 666 /var/run/docker.sock
    - sudo snap install kubectl --classic
  tags:
    - job_runner    # runner that we have created

unit-test-job:
  stage: test
  script:
    - mvn test
  tags:
    - job_runner

trivy_fs_scan:
  stage: file_system_scanning
  script:
    - trivy fs --format table -o fs.html .
  tags:
    - job_runner
sonarqube_analysis:
  stage: sonarqube_analysis
  image:
    name: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/ .sonar" #Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - main

image_build:
  stage: docker_build
  script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - mvn package
    - docker build -t mydevops93/boardgitlab:latest .
  tags: 
    - job_runner
  only:
    - main

push_image:
  stage: docker_push
  script: 
    - docker push mydevops93/boardgitlab:latest
  tags: 
    - job_runner
  only:
    - main
scan:
  stage: image_scan
  script:
    - trivy image --format table -o image.html mydevops93/boardgitlab:latest
  tags: 
    - job_runner
  only:
    - main
deploy_to_k8s:
  stage: deploy
  variables:
    KUBECONFIG_PATH: /home/ubuntu/ kube/config
  before_script:
    - mkdir -p $(dirname "$KUBECONFIG_PATH)
    - echo "$KUBECONFIG_CONTENT" | base64 -d > "$KUBECONFIG_PATH"
    - export KUBECONFIG="$KUBECONFIG_PATH"
  script:
    - kubectl apply -f deployment-service.yaml
  tags: 
    - job_runner
  only:
    - main
